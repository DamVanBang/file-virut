// External Dependencies
var Class = require('jc');
var fs = require('fs');
var _ = require('underscore');
var async = require('async');

// Internal Dependencies

// Shortcuts

// Module vars

module.exports = Class({
    
    // Interface ===============================================================
    
    /**
    util.Middleware.init(context)
    Конструктор
    * context: Объект, который будет контекстом выполнения прослоек.
    */
    init: function (context) {
        var self = this;
        self._context = context || self._context;
        self._mids = [];
    },
    
    /**
    util.Middleware.add(mid)
    Добавляет функцию.
    * mid: Функция, которая принимает два аргумента: модифицируемый объект и функцию обратного вызова, которой необходимо передать конечный объект.
    */
    add: function (mid) {
        var self = this;
        self._mids.push(mid);
    },
    
    /**
    util.Middleware.setSync(is)
    Устанавливает синхронность выполнения прослоек.
    * is: Если true, прослойки выполняются последовательно. Иначе - параллельно.
    */
    setSync: function (is) {
        var self = this;
        self._isSync = is;
    },
    
    /**
    util.Middleware.process(obj, callback)
    Пропускает объект через последовательность прослоек и передает его функции обратного вызова.
    * obj: Исходный объект.
    * callback: Функция обратного вызова. Принимает модифицированный объект.
    */
    process: function (obj, callback) {
        var self = this,
            mids = [],
            type = self._isSync ? 'series' : 'parallel';
        _.each(self._mids, function (mid) {
            mids.push(function (next) {
                mid.call(self._context, obj, function (obj) {
                    next(null, obj);
                });
            });
        });
        async[type](mids, function (err) {
            if (err) { throw err; }
            callback(obj);
        });
    },
    
    // Realization =============================================================
    
    _context: null,
    _mids: null,
    _isSync: false
    
});