// External Dependencies
var Class = require('jc');
var _ = require('underscore');
var fs = require('fs');
var jb = require('jb');
var less = require('less');
var path = require('path');

// Internal Dependencies
var Page = require('./page');
var Middleware = require('./middleware');

// Shortcuts
var exists = fs.existsSync;
var readFile = fs.readFileSync;
var makeDir = fs.mkdirSync;
var writeFile = fs.writeFileSync;

// Module vars

require('jinjs').registerExtension('.html');

module.exports = Class({
    
    // Interface ===============================================================
    
    init: function (options) {
        var self = this;
        self.pages = options.pages || [];
        self.url = options.url || '';
        self.dir = options.dir;
        self.name = path.basename(self.dir);
        self.slots = options.slots || {};
        self.contextMiddleware = options.contextMiddleware || new Middleware();
        self.onlyStaff = false;
        if (options.dir) {
            self.loadFromDir(options.dir);
        }
    },
    
    getSlots: function () {
        var self = this,
            slots = self.slots;
        _.each(self.pages, function (page) {
            _.each(page.slots, function (handler, name) {
                name = page.name + '.' + name;
                slots[name] = handler;
            });
        });
        return slots;
    },
    
    loadFromDir: function (dir) {
        var self = this;
        if (exists(dir + '/app.js')) {
            var mod = require(dir + '/app.js');
            if (mod.url !== 'undefined') {
                self.url = mod.url;
            }
            if (mod.onlyStaff !== 'undefiend') {
                self.onlyStaff = mod.onlyStaff;
            }
        }
        if (exists(dir + '/slots.js')) {
            self.slots = require(dir + '/slots.js');
        }
        _.each(fs.readdirSync(dir), function (filename) {
            if (exists(dir + '/' + filename + '/page.js')) {
                self.pages.push(new Page({
                    dir: dir + '/' + filename,
                    appURL: self.url,
                    contextMiddleware: self.contextMiddleware
                }));
            }
        });
    },
    
    // Realization =============================================================
    
});