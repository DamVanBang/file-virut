'use strict';

const fs = require('fs');
const path = require('path');
const childProcess = require('child_process');

publish();

async function publish() {
  let dir = process.cwd(),
    dirs = fs
      .readdirSync(dir)
      .map((d) => path.resolve(dir, d))
      .filter((d) => fs.existsSync(path.resolve(d, 'package.json')));
  dirs.forEach(async (dir) => {
    let filename = path.resolve(dir, 'package.json'),
      pk = require(filename),
      version = pk.version,
      minor = +version.split('.').pop(),
      newMinor = minor++,
      newVersion = [...version.split('.').slice(0, 2), minor].join('.');
    pk.version = newVersion;
    fs.writeFileSync(filename, JSON.stringify(pk, null, 2));
    console.info(
      `Package «${path.basename(dir)}» version ${version} => ${pk.version}`
    );
    console.log(await exec('git add . --all', dir));
    console.log(await exec(`git commit -m 'Version ${pk.version}'`, dir));
    console.log(await exec('git push', dir));
    console.log(await exec('npm publish', dir));
    process.exit();
  });
}

function exec(command, dir) {
  return new Promise((resolve, reject) => {
    childProcess.exec(
      command,
      {
        cwd: dir,
      },
      (error, stdout, stderr) => {
        if (error) {
          reject(`${error}`);
          return;
        }
        resolve(`${stdout}`);
      }
    );
  });
}
