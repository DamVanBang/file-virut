// External Dependencies
var Class = require('jc');
var fs = require('fs');
var path = require('path');
var uglify = require("uglify-js");

// Internal Dependencies

// Shortcuts

// Module vars
var template = fs.readFileSync(__dirname + '/../templates/module.js') + '';

module.exports = Class({
    
    // Interface ===============================================================
    
    init: function (options) {
        var self = this;
        self.filename = options.filename;
        self.root = options.root || path.dirname(self.filename);
        self.output = options.output;
        self.min = options.min || false;
    },
    
    config: function (options) {
        var self = this;
        if (!options) {
            return {
                filename: self.filename,
                root: self.root,
                output: self.output,
                min: self.min
            };
        }
    },
    
    build: function (output) {
        var self = this,
            filename = self.filename,
            output = output || self.output,
            min = self.min,
            source = self.renderFile(filename);
        if (min) {
            source = uglify.minify(source, {
                fromString: true
            }).code;
        }
        fs.writeFileSync(output, source);
    },
    
    // Realization =============================================================
    
    renderFile: function (filename) {
        var self = this,
            source = fs.readFileSync(filename) + '';
        if (!fs.existsSync(filename)) {
            console.log('File "' + filename + '" not found!');
            return;
        }
        source = source.
        replace(/import\(\'(.+)\'\)/mg, function (str, filename) {
            return template.replace('{{{code}}}',
                self.renderFile(self.root + '/' + filename));
        })
        .replace(/include\(\'(.+)\'\)/mg, function (str, filename) {
            return fs.readFileSync(self.root + '/' + filename) + '';
        });
        return source;
    },
    
});